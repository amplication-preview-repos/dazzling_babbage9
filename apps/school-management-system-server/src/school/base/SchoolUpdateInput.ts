/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  IsEnum,
  ValidateNested,
} from "class-validator";
import { EnumSchoolWeekendDays } from "./EnumSchoolWeekendDays";
import { EnumSchoolHolidaysCalculation } from "./EnumSchoolHolidaysCalculation";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { EnumSchoolDeductionsFrom } from "./EnumSchoolDeductionsFrom";
import { SubscriptionUpdateManyWithoutSchoolsInput } from "./SubscriptionUpdateManyWithoutSchoolsInput";
import { Type } from "class-transformer";

@InputType()
class SchoolUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumSchoolWeekendDays,
    isArray: true,
  })
  @IsEnum(EnumSchoolWeekendDays, {
    each: true,
  })
  @IsOptional()
  @Field(() => [EnumSchoolWeekendDays], {
    nullable: true,
  })
  weekendDays?: Array<"Option1">;

  @ApiProperty({
    required: false,
    enum: EnumSchoolHolidaysCalculation,
  })
  @IsEnum(EnumSchoolHolidaysCalculation)
  @IsOptional()
  @Field(() => EnumSchoolHolidaysCalculation, {
    nullable: true,
  })
  holidaysCalculation?: "Option1" | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  styles?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  address?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  contactDetails?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumSchoolDeductionsFrom,
  })
  @IsEnum(EnumSchoolDeductionsFrom)
  @IsOptional()
  @Field(() => EnumSchoolDeductionsFrom, {
    nullable: true,
  })
  deductionsFrom?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: () => SubscriptionUpdateManyWithoutSchoolsInput,
  })
  @ValidateNested()
  @Type(() => SubscriptionUpdateManyWithoutSchoolsInput)
  @IsOptional()
  @Field(() => SubscriptionUpdateManyWithoutSchoolsInput, {
    nullable: true,
  })
  subscriptions?: SubscriptionUpdateManyWithoutSchoolsInput;
}

export { SchoolUpdateInput as SchoolUpdateInput };
